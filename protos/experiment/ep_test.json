{
    "arch": "tensorrt",
    "name": "tensorrt_expander",
    "author": "Zhixu Zhao",
    "ops": [
        {
            "optype": "softmax",
            "rules": [
                {
                    "cond": [
                        "self.params[axis] == 0",
                        "LN_TRT_VER(\"4.4.0\") < 0 && self.ins[src].ndim < 4 && self.params[axis] != 1",
                        "LN_TRT_VER(\"4.4.0\") < 0 && self.ins[src].ndim >= 4 && self.params[axis] != self.ins[src].ndim - 3",
                    ],
                    "replace": ["softmax_cuda"]
                },
                {
                    "cond": ["LN_TRT_VER(\"4.4.0\") < 0"],
                    "replace": ["tensorrt trt"],
                    "details": [
                        "trt.ins[src$@] = self.ins[src]",
                        "trt.outs[dst$@] = self.outs[dst]",
                        "trt.params[op$@] = \"softmax\"",
                        "trt.params[op$^_src] = self.ins[src]",
                        "trt.params[op$^_dst] = self.outs[dst]",
                        "trt.params[batch_size] = self.ins[src].dims[0]"
                    ]
                },
                {
                    "cond": [],
                    "replace": ["tensorrt trt"],
                    "details": [
                        "trt.ins[src$@] = self.ins[src]",
                        "trt.outs[dst$@] = self.outs[dst]",
                        "trt.params[op$@] = \"softmax\"",
                        "trt.params[op$^_src] = self.ins[src]",
                        "trt.params[op$^_dst] = self.outs[dst]",
                        "trt.params[op$^_axes] = ${type(int) 0 | (1 << ${rh self.params[axis]})}",
                        "trt.params[batch_size] = self.ins[src].dims[0]"
                    ]
                }
            ]
        }
    ]
}
