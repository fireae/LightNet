transform_bboxSQD {
    optype: "transform_bboxSQD",
    author: "Zhao Zhixu",
    arch: "none",
    tensors_in: [
        {arg_name: "src_delta", mtype: "LN_MEM_NONE", ndim: 5,
         dtype: "TL_FLOAT",
         check: "src_delta->dims[4] == 4"},
        {arg_name: "src_anchor", mtype: "LN_MEM_NONE",
         sametype: "src_delta", sameshape: "src_delta"},
    ],
    tensors_out: [
        {arg_name: "dst", mtype: "LN_MEM_NONE",
         ndim: "src_delta->ndim", dims: "src_delta->dims",
         dtype: "src_delta->dtype"}
    ],
    params: [
        {arg_name: "width", ptype: "LN_PARAM_NUMBER",
         realtype: "int", gt: 0},
        {arg_name: "height", ptype: "LN_PARAM_NUMBER",
         realtype: "int", gt: 0},
        {arg_name: "img_width", ptype: "LN_PARAM_NUMBER",
         realtype: "int", gt: 0},
        {arg_name: "img_height", ptype: "LN_PARAM_NUMBER",
         realtype: "int", gt: 0},
        {arg_name: "x_shift", ptype: "LN_PARAM_NUMBER",
         realtype: "int"},
        {arg_name: "y_shift", ptype: "LN_PARAM_NUMBER",
         realtype: "int"},
    ]
}

transform_bboxSQD_cpu : transform_bboxSQD {
    optype: "transform_bboxSQD_cpu",
    arch: "cpu",
    tensors_in: [
        {mtype: "LN_MEM_CPU"},
        {mtype: "LN_MEM_CPU"},
    ],
    tensors_out: [
        {mtype: "LN_MEM_CPU"}
    ],
    run: ""
}

transform_bboxSQD_cuda : transform_bboxSQD {
    optype: "transform_bboxSQD_cuda",
    arch: "cuda",
    tensors_in: [
        {mtype: "LN_MEM_CUDA"},
        {mtype: "LN_MEM_CUDA"},
    ],
    tensors_out: [
        {mtype: "LN_MEM_CUDA"}
    ],
    run: "tl_tensor_transform_bboxSQD_cuda(src_delta, src_anchor, dst, width, height, img_width, img_height, x_shift, y_shift);"
}
