slice {
    optype: "slice",
    author: "Zhao Zhixu",
    arch: "none",
    tensors_in: [
        {arg_name: "src", mtype: "LN_MEM_NONE"}
    ],
    tensors_out: [
        {arg_name: "dst", mtype: "LN_MEM_NONE",
         ndim: "src->ndim", dtype: "src->dtype",
         custom: "dst_dims = ln_clone(src->dims, sizeof(int)*src->ndim);\ndst_dims[axis] = len;",
         cleanup: "ln_free(dst_dims);"}
    ],
    params: [
        {arg_name: "axis", ptype: "LN_PARAM_NUMBER",
         realtype: "int", ge: 0, lt: "src->ndim"},
        {arg_name: "start", ptype: "LN_PARAM_NUMBER",
         realtype: "int", ge: 0, lt: "src->dims[axis]"},
        {arg_name: "len", ptype: "LN_PARAM_NUMBER",
         realtype: "int", gt: 0, le: "src->dims[axis]",
         check: "len + start <= src->dims[axis]"}
    ]
}

slice_cpu : slice {
    optype: "slice_cpu",
    arch: "cpu",
    tensors_in: [
        {mtype: "LN_MEM_CPU"}
    ],
    tensors_out: [
        {mtype: "LN_MEM_CPU"}
    ],
    run: "tl_tensor_slice(src, dst, axis, start, len);"
}

slice_cuda : slice {
    optype: "slice_cuda",
    arch: "cuda",
    tensors_in: [
        {mtype: "LN_MEM_CUDA"}
    ],
    tensors_out: [
        {mtype: "LN_MEM_CUDA"}
    ],
    run: "tl_tensor_slice_cuda(src, dst, axis, start, len);"
}
