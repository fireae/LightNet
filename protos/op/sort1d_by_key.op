sort1d_by_key {
    optype: "sort1d_by_key",
    author: "Zhao Zhixu",
    arch: "none",
    tensors_in: [
        {arg_name: "src_key", mtype: "LN_MEM_NONE", ndim: 1},
        {arg_name: "src_val", mtype: "LN_MEM_NONE", ndim: 1,
         len: "src_key->len", dtype: "TL_INT32"},
    ],
    tensors_out: [
        {arg_name: "dst_key", mtype: "LN_MEM_NONE",
         owner: "src_key_name",
         ndim: "src_key->ndim", dtype: "src_key->dtype",
         dims: "src_key->dims"},
        {arg_name: "dst_val", mtype: "LN_MEM_NONE",
         owner: "src_val_name",
         ndim: "src_val->ndim", dtype: "src_val->dtype",
         dims: "src_val->dims"}
    ],
    params: [
        {arg_name: "dir", ptype: "LN_PARAM_STRING",
         from_func: "tl_sort_dir_from_str", realtype: "int",
         check: "dir != -1, \"'dir' should be a supported tl_sort_dir\""}
    ]
}

sort1d_by_key_cpu : sort1d_by_key {
    optype: "sort1d_by_key_cpu",
    arch: "cpu",
    tensors_in: [
        {mtype: "LN_MEM_CPU"},
        {mtype: "LN_MEM_CPU"},
    ],
    tensors_out: [
        {mtype: "LN_MEM_CPU"},
        {mtype: "LN_MEM_CPU"}
    ],
    run: "",
    calc_offset: "return ln_tensor_table_find(op_arg->tensor_table, te->owner)->offset;"
}

sort1d_by_key_cuda : sort1d_by_key {
    optype: "sort1d_by_key_cuda",
    arch: "cuda",
    tensors_in: [
        {mtype: "LN_MEM_CUDA"},
        {mtype: "LN_MEM_CUDA"},
    ],
    tensors_out: [
        {mtype: "LN_MEM_CUDA"},
        {mtype: "LN_MEM_CUDA"}
    ],
    run: "tl_tensor_sort1d_by_key_cuda(src_key, src_val, dir);",
    calc_offset: "return ln_tensor_table_find(op_arg->tensor_table, te->owner)->offset;"
},
