{
    "author": "Zhixu Zhao",
    "name": "cuda",
    "arch": "cuda",
    "head": "#include \"arch/ln_cuda.h\"",
    "ops": [
        {
            "optype": "create",
            "rules": [
                {
                    "cond": [],
                    "replace": ["create_cuda"]
                },
            ]
        },
        {
            "optype": "conv2d",
            "rules": [
                {
                    "cond": [],
                    "replace": ["conv2d_cuda"]
                }
            ]
        },
        {
            "optype": "maxpool2d",
            "rules": [
                {
                    "cond": [],
                    "replace": ["maxpool2d_cuda"]
                }
            ]
        },
        {
            "optype": "maxreduce",
            "rules": [
                {
                    "cond": [],
                    "replace": ["maxreduce_cuda"]
                }
            ]
        },
        {
            "optype": "relu",
            "rules": [
                {
                    "cond": [],
                    "replace": ["relu_cuda"]
                }
            ]
        },
        {
            "optype": "forward",
            "rules": [
                {
                    "cond": [],
                    "replace": ["forward_cuda"]
                }
            ]
        },
        {
            "optype": "slice",
            "rules": [
                {
                    "cond": [],
                    "replace": ["slice_cuda"]
                }
            ]
        },
        {
            "optype": "transpose",
            "rules": [
                {
                    "cond": [],
                    "replace": ["transpose_cuda"]
                }
            ]
        },
        {
            "optype": "zeros",
            "rules": [
                {
                    "cond": [],
                    "replace": ["zeros_cuda"]
                }
            ]
        },
        {
            "optype": "elew",
            "rules": [
                {
                    "cond": [],
                    "replace": ["elew_cuda"]
                }
            ]
        },
        {
            "optype": "dot_product",
            "rules": [
                {
                    "cond": [],
                    "replace": ["create_cuda create_ws1", "create_cuda create_ws2",
                                "dot_product_cuda dot"],
                    "details": [
                        "create_ws1.params[dtype] = tl_dtype_name(${rh self.ins[src1].dtype})",
                        "create_ws1.params[dims] = ${type(int *, 1) (int[]){tl_tensor_dot_product_cuda_ws_len(${rh self.ins[src1].tensor})}}",
                        "create_ws1.params[ran] = ${type(double *, 2) (double[]){0, 0}}",
                        "create_ws1.params[data] = ${type(double *, 1) (double[]){0}}",
                        "create_ws1.params[from_file] = LN_FALSE",

                        "create_ws2.params[dtype] = create_ws1.params[dtype]",
                        "create_ws2.params[dims] = create_ws1.params[dims]",
                        "create_ws2.params[ran] = create_ws1.params[ran]",
                        "create_ws2.params[data] = create_ws1.params[data]",
                        "create_ws2.params[from_file] = create_ws1.params[from_file]",

                        "dot.ins[src1] = self.ins[src1]",
                        "dot.ins[src2] = self.ins[src2]",
                        "dot.ins[ws1] = create_ws1.outs[dst]",
                        "dot.ins[ws2] = create_ws2.outs[dst]",
                        "dot.outs[dst] = self.outs[dst]"
                    ]
                }
            ]
        },
        {
            "optype": "softmax",
            "rules": [
                {
                    "cond": [],
                    "replace": ["softmax_cuda"]
                }
            ]
        },
        {
            "optype": "concat",
            "rules": [
                {
                    "cond": [],
                    "replace": ["concat_cuda"]
                }
            ]
        },
        {
            "optype": "batchnorm",
            "rules": [
                {
                    "cond": [],
                    "replace": ["batchnorm_cuda"]
                }
            ]
        },
        {
            "optype": "upsample",
            "rules": [
                {
                    "cond": [],
                    "replace": ["upsample_cuda"]
                }
            ]
        },
        {
            "optype": "maxreduce_arg",
            "rules": [
                {
                    "cond": [],
                    "replace": ["maxreduce_arg_cuda"]
                }
            ]
        },
        {
            "optype": "print",
            "rules": [
                {
                    "cond": [],
                    "replace": ["print_cuda"]
                }
            ]
        },
        {
            "optype": "sigmoid",
            "rules": [
                {
                    "cond": [],
                    "replace": ["sigmoid_cuda"]
                }
            ]
        },
        {
            "optype": "sort1d",
            "rules": [
                {
                    "cond": [],
                    "replace": ["sort1d_cuda"]
                }
            ]
        },
        {
            "optype": "sort1d_by_key",
            "rules": [
                {
                    "cond": [],
                    "replace": ["sort1d_by_key_cuda"]
                }
            ]
        },
        {
            "optype": "arange",
            "rules": [
                {
                    "cond": [],
                    "replace": ["arange_cuda"]
                }
            ]
        },
        {
            "optype": "transform_bboxSQD",
            "rules": [
                {
                    "cond": [],
                    "replace": ["transform_bboxSQD_cuda"]
                }
            ]
        },
        {
            "optype": "rearange",
            "rules": [
                {
                    "cond": [],
                    "replace": ["rearange_cuda"]
                }
            ]
        },
        {
            "optype": "pick1d",
            "rules": [
                {
                    "cond": [],
                    "replace": ["pick1d_cuda"]
                }
            ]
        },
        {
            "optype": "fprint",
            "rules": [
                {
                    "cond": [],
                    "replace": ["fprint_cuda"]
                }
            ]
        },
        {
            "optype": "lrelu",
            "rules": [
                {
                    "cond": [],
                    "replace": ["lrelu_cuda"]
                }
            ]
        },
        {
            "optype": "detect_yolov3",
            "rules": [
                {
                    "cond": [],
                    "replace": ["detect_yolov3_cuda"]
                }
            ]
        },
        {
            "optype": "avgpool2d",
            "rules": [
                {
                    "cond": [],
                    "replace": ["avgpool2d_cuda"]
                }
            ]
        },
        {
            "optype": "resize",
            "rules": [
                {
                    "cond": [],
                    "replace": ["resize_cuda"]
                }
            ]
        },
        {
            "optype": "submean",
            "rules": [
                {
                    "cond": [],
                    "replace": ["submean_cuda"]
                }
            ]
        },
    ]
}
