#define DTYPE TL_FLOAT

#define conv(in_name, out_name, in_c, out_c,                            \
             _group, _size, _stride, _padding, _dilation)               \
    create(| dst=out_name##_weights |                                   \
           dtype=DTYPE, dims=[out_c, ${eval in_c/_group}, _size, _size], \
           ran=[-10, 10], data=[0], from_file=false);                   \
    create(| dst=out_name##_bias | dtype=DTYPE, dims=[out_c],           \
           ran=[0, 0], data=[0], from_file=false);                      \
    conv2d(src=in_name, weight=out_name##_weights, bias=out_name##_bias | \
           dst=out_name | group=_group, size=[_size, _size],            \
           stride=[_stride, _stride],                                   \
           padding=[_padding, _padding, _padding, _padding],            \
           autopad="SAME_UPPER",                                        \
           dilation=[_dilation, _dilation])

#define conv_1xn(in_name, out_name, in_c, out_c,                        \
                 _size,  _padding, _dilation)                           \
    create(| dst=out_name##_weights |                                   \
           dtype=DTYPE, dims=[out_c, in_c, 1, _size],                   \
           ran=[-10, 10], data=[0], from_file=false);                   \
    create(| dst=out_name##_bias | dtype=DTYPE, dims=[out_c],           \
           ran=[0, 0], data=[0], from_file=false);                      \
    conv2d(src=in_name, weight=out_name##_weights, bias=out_name##_bias | \
           dst=out_name | group=1, size=[1, _size],                     \
           stride=[1, 1],                                               \
           padding=[_padding, _padding, _padding, _padding],            \
           autopad="SAME_UPPER",                                        \
           dilation=[_dilation, _dilation])

#define conv_nx1(in_name, out_name, in_c, out_c,                        \
                 _size,  _padding, _dilation)                           \
    create(| dst=out_name##_weights |                                   \
           dtype=DTYPE, dims=[out_c, in_c, _size, 1],                   \
           ran=[-10, 10], data=[0], from_file=false);                   \
    create(| dst=out_name##_bias | dtype=DTYPE, dims=[out_c],           \
           ran=[0, 0], data=[0], from_file=false);                      \
    conv2d(src=in_name, weight=out_name##_weights, bias=out_name##_bias | \
           dst=out_name | group=1, size=[_size, 1],                     \
           stride=[1, 1],                                               \
           padding=[_padding, _padding, _padding, _padding],            \
           autopad="SAME_UPPER",                                        \
           dilation=[_dilation, _dilation])

#define downsampler(in, out, in_c, out_c)                               \
    maxpool2d(src=in | dst=out##_pool | size=[2, 2], stride=[2, 2],     \
              padding=[0, 0, 0, 0], autopad="SAME_UPPER");              \
    conv(in, out##_conv, in_c, ${eval out_c-in_c}, 1, 3, 2, 0, 1);      \
    concat(src1=out##_pool, src2=out##_conv | dst=out##_concat | axis=1); \
    create(| dst=out##_bn_gamma | dtype=DTYPE, dims=[out_c], ran=[0, 0], \
           data=[0], from_file=false);                                  \
    create(| dst=out##_bn_beta | dtype=DTYPE, dims=[out_c], ran=[0, 0], \
           data=[0], from_file=false);                                  \
    create(| dst=out##_bn_moving_mean | dtype=DTYPE, dims=[out_c], ran=[0, 0], \
           data=[0], from_file=false);                                  \
    create(| dst=out##_bn_moving_variance | dtype=DTYPE, dims=[out_c],  \
           ran=[0, 0], data=[0], from_file=false);                      \
    batchnorm(src=out##_concat, scale=out##_bn_gamma,                   \
              offset=out##_bn_beta, mean=out##_bn_moving_mean,          \
              var=out##_bn_moving_variance | dst=out##_bn |             \
              epsilon=1e-5);                                            \
    relu(src=out##_bn | dst=out |);

#define res_nonbt1d(in, out, c, _size)                                  \
    conv_1xn(in, out##_1dconv1, c, c, _size, 0, 1);                     \
    relu(src=out##_1dconv1 | dst=out##_relu1 |);                        \
    conv_nx1(out##_relu1, out##_1dconv2, c, c, _size, 0, 1);            \
    create(| dst=out##_1dconv2_bn_gamma | dtype=DTYPE, dims=[c],        \
           ran=[0, 0], data=[0], from_file=false);                      \
    create(| dst=out##_1dconv2_bn_beta | dtype=DTYPE, dims=[c],         \
           ran=[0, 0], data=[0], from_file=false);                      \
    create(| dst=out##_1dconv2_bn_moving_mean | dtype=DTYPE, dims=[c],  \
           ran=[0, 0], data=[0], from_file=false);                      \
    create(| dst=out##_1dconv2_bn_moving_variance | dtype=DTYPE, dims=[c], \
           ran=[0, 0], data=[0], from_file=false);                      \
    batchnorm(src=out##_1dconv2, scale=out##_1dconv2_bn_gamma,          \
              offset=out##_1dconv2_bn_beta, mean=out##_1dconv2_bn_moving_mean, \
              var=out##_1dconv2_bn_moving_variance | dst=out##_bn1 |    \
              epsilon=1e-5);                                            \
    relu(src=out##_bn1 | dst=out##_relu2 |);                            \
    conv_1xn(out##_relu2, out##_1dconv3, c, c, _size, 0, 1);            \
    relu(src=out##_1dconv3 | dst=out##_relu3 |);                        \
    conv_nx1(out##_relu3, out##_1dconv4, c, c, _size, 0, 1);            \
    create(| dst=out##_1dconv4_bn_gamma | dtype=DTYPE, dims=[c],        \
           ran=[0, 0], data=[0], from_file=false);                      \
    create(| dst=out##_1dconv4_bn_beta | dtype=DTYPE, dims=[c],         \
           ran=[0, 0], data=[0], from_file=false);                      \
    create(| dst=out##_1dconv4_bn_moving_mean | dtype=DTYPE, dims=[c],  \
           ran=[0, 0], data=[0], from_file=false);                      \
    create(| dst=out##_1dconv4_bn_moving_variance | dtype=DTYPE, dims=[c], \
           ran=[0, 0], data=[0], from_file=false);                      \
    batchnorm(src=out##_1dconv4, scale=out##_1dconv4_bn_gamma,          \
              offset=out##_1dconv4_bn_beta, mean=out##_1dconv4_bn_moving_mean, \
              var=out##_1dconv4_bn_moving_variance | dst=out##_bn2 |    \
              epsilon=1e-5);                                            \
    elew(src1=out##_bn2, src2=in | dst=out##_add | elew_op=TL_SUM);     \
    relu(src=out##_add | dst=out |);

#define res_nonbt1d_dilate(in, out, c, _size, _dilation)                \
    conv_1xn(in, out##_1dconv1, c, c, _size, 0, 1);                     \
    relu(src=out##_1dconv1 | dst=out##_relu1 |);                        \
    conv_nx1(out##_relu1, out##_1dconv2, c, c, _size, 0, 1);            \
    create(| dst=out##_1dconv2_bn_gamma | dtype=DTYPE, dims=[c],        \
           ran=[0, 0], data=[0], from_file=false);                      \
    create(| dst=out##_1dconv2_bn_beta | dtype=DTYPE, dims=[c],         \
           ran=[0, 0], data=[0], from_file=false);                      \
    create(| dst=out##_1dconv2_bn_moving_mean | dtype=DTYPE, dims=[c],  \
           ran=[0, 0], data=[0], from_file=false);                      \
    create(| dst=out##_1dconv2_bn_moving_variance | dtype=DTYPE, dims=[c], \
           ran=[0, 0], data=[0], from_file=false);                      \
    batchnorm(src=out##_1dconv2, scale=out##_1dconv2_bn_gamma,          \
              offset=out##_1dconv2_bn_beta, mean=out##_1dconv2_bn_moving_mean, \
              var=out##_1dconv2_bn_moving_variance | dst=out##_bn1 |    \
              epsilon=1e-5);                                            \
    relu(src=out##_bn1 | dst=out##_relu2 |);                            \
    conv_1xn(out##_relu2, out##_dilate_1dconv3, c, c, _size, 0, _dilation); \
    relu(src=out##_dilate_1dconv3 | dst=out##_relu3 |);                 \
    conv_nx1(out##_relu3, out##_dilate_1dconv4, c, c, _size, 0, _dilation); \
    create(| dst=out##_dilate_1dconv4_bn_gamma | dtype=DTYPE, dims=[c], \
           ran=[0, 0], data=[0], from_file=false);                      \
    create(| dst=out##_dilate_1dconv4_bn_beta | dtype=DTYPE, dims=[c],  \
           ran=[0, 0], data=[0], from_file=false);                      \
    create(| dst=out##_dilate_1dconv4_bn_moving_mean | dtype=DTYPE,     \
           dims=[c], ran=[0, 0], data=[0], from_file=false);            \
    create(| dst=out##_dilate_1dconv4_bn_moving_variance | dtype=DTYPE, \
           dims=[c], ran=[0, 0], data=[0], from_file=false);            \
    batchnorm(src=out##_dilate_1dconv4, scale=out##_dilate_1dconv4_bn_gamma, \
              offset=out##_dilate_1dconv4_bn_beta,                      \
              mean=out##_dilate_1dconv4_bn_moving_mean,                 \
              var=out##_dilate_1dconv4_bn_moving_variance | dst=out##_bn2 | \
              epsilon=1e-5);                                            \
    elew(src1=out##_bn2, src2=in | dst=out##_add | elew_op=TL_SUM);     \
    relu(src=out##_add | dst=out |);

#define deconv_bn(in, out, in_c, out_c, out_h, out_w, _size, _stride)   \
    create(| dst=out##_weights |                                        \
           dtype=DTYPE, dims=[in_c, ${eval out_c/1}, _size, _size],     \
           ran=[-10, 10], data=[0], from_file=false);                   \
    create(| dst=out##_bias | dtype=DTYPE, dims=[out_c],                \
           ran=[0, 0], data=[0], from_file=false);                      \
    deconv2d(src=in, weight=out##_weights, bias=out##_bias | dst=out##_deconv | \
             group=1, size=[_size, _size], stride=[_stride, _stride],   \
             output_dims=[1, out_c, out_h, out_w], padding=[0, 0, 0, 0], \
             output_padding=[0, 0], dilation=[1, 1], autopad="SAME_UPPER"); \
    create(| dst=out##_bn_gamma | dtype=DTYPE, dims=[out_c],            \
           ran=[0, 0], data=[0], from_file=false);                      \
    create(| dst=out##_bn_beta | dtype=DTYPE, dims=[out_c],             \
           ran=[0, 0], data=[0], from_file=false);                      \
    create(| dst=out##_bn_moving_mean | dtype=DTYPE, dims=[out_c],      \
           ran=[0, 0], data=[0], from_file=false);                      \
    create(| dst=out##_bn_moving_variance | dtype=DTYPE, dims=[out_c],  \
           ran=[0, 0], data=[0], from_file=false);                      \
    batchnorm(src=out##_deconv, scale=out##_bn_gamma,                   \
              offset=out##_bn_beta, mean=out##_bn_moving_mean,          \
              var=out##_bn_moving_variance | dst=out##_bn | epsilon=1e-5); \
    relu(src=out##_bn | dst=out |);

#define INPUT_H 360
#define INPUT_W 640
#define NUM_CLASSES 3

create(| dst=input | dtype=DTYPE, dims=[1, 3, INPUT_H, INPUT_W], ran=[0, 255],
       data=[0], from_file=true);
downsampler(input, l1_downsampler, 3, 16);
downsampler(l1_downsampler, l2_downsampler, 16, 64);
res_nonbt1d(l2_downsampler, l3_nonbt1d, 64, 3);
res_nonbt1d(l3_nonbt1d, l4_nonbt1d, 64, 3);
res_nonbt1d(l4_nonbt1d, l5_nonbt1d, 64, 3);
res_nonbt1d(l5_nonbt1d, l6_nonbt1d, 64, 3);
res_nonbt1d(l6_nonbt1d, l7_nonbt1d, 64, 3);
downsampler(l7_nonbt1d, l8_downsampler, 64, 128);
res_nonbt1d_dilate(l8_downsampler, l9_nonbt1d, 128, 3, 2);
res_nonbt1d_dilate(l9_nonbt1d, l10_nonbt1d, 128, 3, 4);
res_nonbt1d_dilate(l10_nonbt1d, l11_nonbt1d, 128, 3, 8);
res_nonbt1d_dilate(l11_nonbt1d, l12_nonbt1d, 128, 3, 16);
res_nonbt1d_dilate(l12_nonbt1d, l13_nonbt1d, 128, 3, 2);
res_nonbt1d_dilate(l13_nonbt1d, l14_nonbt1d, 128, 3, 4);
res_nonbt1d_dilate(l14_nonbt1d, l15_nonbt1d, 128, 3, 8);
res_nonbt1d_dilate(l15_nonbt1d, l16_nonbt1d, 128, 3, 16);
deconv_bn(l16_nonbt1d, l17_deconv, 128, 64, ${eval INPUT_H*2**-2},
          ${eval INPUT_W*2**-2}, 2, 2);
relu(src=l17_deconv | dst=l17_deconv_relu |);
res_nonbt1d(l17_deconv_relu, l18_nonbt1d, 64, 3);
res_nonbt1d(l18_nonbt1d, l19_nonbt1d, 64, 3);
deconv_bn(l19_nonbt1d, l20_deconv, 64, 32, ${eval INPUT_H*2**-1},
          ${eval INPUT_W*2**-1}, 2, 2);
relu(src=l20_deconv | dst=l20_deconv_relu |);
res_nonbt1d(l20_deconv, l21_nonbt1d, 32, 3);
res_nonbt1d(l21_nonbt1d, l22_nonbt1d, 32, 3);
deconv_bn(l22_nonbt1d, l23_classifier, 32, NUM_CLASSES, INPUT_H, INPUT_W, 2, 2);
reshape(src=l23_classifier | dst=l23_classifier_reshape |
        dims=[1, NUM_CLASSES, INPUT_H, INPUT_W]);
softmax(src=l23_classifier_reshape | dst=prob | axis=1);
