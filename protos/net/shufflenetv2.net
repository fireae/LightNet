#define DTYPE TL_FLOAT

#define conv(in_name, out_name, in_c, out_c,                            \
             _group, _size, _stride, _padding, _dilation)               \
    create(| dst=out_name##_wts |                                       \
           dtype=DTYPE, dims=[out_c, ${eval in_c/_group}, _size, _size], \
           ran=[-10, 10], data=[0], from_file=false);                   \
    create(| dst=out_name##_bias | dtype=DTYPE, dims=[out_c],           \
           ran=[-10, 10], data=[0], from_file=false);                   \
    conv2d(src=in_name, weight=out_name##_wts, bias=out_name##_bias |   \
           dst=out_name | group=_group, size=[_size, _size],            \
           stride=[_stride, _stride],                                   \
           padding=[_padding, _padding, _padding, _padding],            \
           autopad = "NOTSET",                                      \
           dilation=[_dilation, _dilation])

#define conv_bn_relu(in_name, out_name, in_c, out_c,                    \
                     _group, _size, _stride, _padding, _dilation)       \
    conv(in_name, out_name##_conv, in_c, out_c,                         \
         _group, _size, _stride, _padding, _dilation);                  \
    create(| dst=out_name##_scale | dtype=DTYPE, dims=[out_c], ran=[-10, 10], \
           data=[0], from_file=false);                                  \
    create(| dst=out_name##_offset | dtype=DTYPE, dims=[out_c], ran=[-10, 10], \
           data=[0], from_file=false);                                  \
    create(| dst=out_name##_mean | dtype=DTYPE, dims=[out_c], ran=[-10, 10], \
           data=[0], from_file=false);                                  \
    create(| dst=out_name##_var | dtype=DTYPE, dims=[out_c], ran=[-10, 10], \
           data=[0], from_file=false);                                  \
    batchnorm(src=out_name##_conv, scale=out_name##_scale,              \
              offset=out_name##_offset, mean=out_name##_mean, var=out_name##_var \
              | dst=out_name##_bn | epsilon=1e-6);                      \
    relu(src=out_name##_bn | dst=out_name |)

#define conv_bn(in_name, out_name, in_c, out_c,                         \
                _group, _size, _stride, _padding, _dilation)            \
    conv(in_name, out_name##_conv, in_c, out_c,                         \
         _group, _size, _stride, _padding, _dilation);                  \
    create(| dst=out_name##_scale | dtype=DTYPE, dims=[out_c], ran=[-10, 10], \
           data=[0], from_file=false);                                  \
    create(| dst=out_name##_offset | dtype=DTYPE, dims=[out_c], ran=[-10, 10], \
           data=[0], from_file=false);                                  \
    create(| dst=out_name##_mean | dtype=DTYPE, dims=[out_c], ran=[-10, 10], \
           data=[0], from_file=false);                                  \
    create(| dst=out_name##_var | dtype=DTYPE, dims=[out_c], ran=[-10, 10], \
           data=[0], from_file=false);                                  \
    batchnorm(src=out_name##_conv, scale=out_name##_scale,              \
              offset=out_name##_offset, mean=out_name##_mean, var=out_name##_var \
              | dst=out_name | epsilon=1e-6)

#define depthwise_conv_bn(in_name, out_name, in_c,                      \
                          _size, _stride, _padding, _dilation)          \
    conv(in_name, out_name##_conv, in_c, in_c,                          \
         in_c, _size, _stride, _padding, _dilation);                    \
    create(| dst=out_name##_scale | dtype=DTYPE, dims=[in_c], ran=[-10, 10], \
           data=[0], from_file=false);                                  \
    create(| dst=out_name##_offset | dtype=DTYPE, dims=[in_c], ran=[-10, 10], \
           data=[0], from_file=false);                                  \
    create(| dst=out_name##_mean | dtype=DTYPE, dims=[in_c], ran=[-10, 10], \
           data=[0], from_file=false);                                  \
    create(| dst=out_name##_var | dtype=DTYPE, dims=[in_c], ran=[-10, 10], \
           data=[0], from_file=false);                                  \
    batchnorm(src=out_name##_conv, scale=out_name##_scale,              \
              offset=out_name##_offset, mean=out_name##_mean, var=out_name##_var \
              | dst=out_name | epsilon=1e-6)

#define shuffle(in_name, out_name, g, c, h, w)                          \
    reshape(src=in_name | dst=out_name##_shuffle_reshape1 |             \
            dims=[1, g, ${eval c/g}, h, w]);                            \
    transpose(src=out_name##_shuffle_reshape1 | dst=out_name##_shuffle_trans \
              | axes=[0, 2, 1, 3, 4]);                                  \
    reshape(src=out_name##_shuffle_trans | dst=out_name |               \
            dims=[1, c, h, w])

#define shufflev2_block(in_name, out_name, g, c, h, w,                  \
                        _size, _stride, _padding, _dilation)            \
    slice(src=in_name | dst=out_name##_slice1 |                         \
          axis=1, start=0, len=${eval c/g});                            \
    slice(src=in_name | dst=out_name##_slice2 |                         \
          axis=1, start=${eval c/g}, len=${eval c/g});                  \
    conv_bn_relu(out_name##_slice1, out_name##_conv1,                   \
                 ${eval c/g}, ${eval c/g}, 1, 1, 1, 0, 1);              \
    depthwise_conv_bn(out_name##_conv1, out_name##_conv2, ${eval c/g},  \
                      _size, _stride, _padding, _dilation);             \
    conv_bn_relu(out_name##_conv2, out_name##_conv3,                    \
                 ${eval c/g}, ${eval c/g}, 1, 1, 1, 0, 1);              \
    concat(src1=out_name##_conv3, src2=out_name##_slice2 |              \
           dst=out_name##_concat | axis=1);                             \
    shuffle(out_name##_concat, out_name, g, c, h, w)

#define shufflev2_downsample(in_name, out_name, g, in_c, out_c,         \
                             h, w, _size, _stride, _padding, _dilation) \
    conv_bn_relu(in_name, out_name##_conv1,                             \
                 in_c, ${eval out_c/g}, 1, 1, 1, 0, 1);                 \
    depthwise_conv_bn(out_name##_conv1, out_name##_conv2, ${eval out_c/g}, \
                      _size, _stride, _padding, _dilation);             \
    conv_bn_relu(out_name##_conv2, out_name##_conv3,                    \
                 ${eval out_c/g}, ${eval out_c/g}, 1, 1, 1, 0, 1);      \
    depthwise_conv_bn(in_name, out_name##_conv4, in_c,                  \
                      _size, _stride, _padding, _dilation);             \
    conv_bn_relu(out_name##_conv4, out_name##_conv5,                    \
                 in_c, ${eval out_c/g}, 1, 1, 1, 0, 1);                 \
    concat(src1=out_name##_conv3, src2=out_name##_conv5 |               \
           dst=out_name##_concat | axis=1);                             \
    shuffle(out_name##_concat, out_name, g, out_c, h, w)

#define INPUT_H 224
#define INPUT_W 224
#define IMG_H 375
#define IMG_W 1242

#define CLASS 1001
#define GROUP 2

#define STAGE2_C_0_5 48
#define STAGE3_C_0_5 96
#define STAGE4_C_0_5 192
#define CONV5_C_0_5 1024

#define STAGE2_C_1_0 116
#define STAGE3_C_1_0 232
#define STAGE4_C_1_0 464
#define CONV5_C_1_0 1024

#define STAGE2_C_1_5 176
#define STAGE3_C_1_5 352
#define STAGE4_C_1_5 704
#define CONV5_C_1_5 1024

#define STAGE2_C_2_0 244
#define STAGE3_C_2_0 488
#define STAGE4_C_2_0 976
#define CONV5_C_2_0 2048

#define STAGE2_C STAGE2_C_0_5
#define STAGE3_C STAGE3_C_0_5
#define STAGE4_C STAGE4_C_0_5
#define CONV5_C CONV5_C_0_5

create(| dst=input | dtype=DTYPE, dims=[1, 3, INPUT_H, INPUT_W], ran=[0, 255],
       data=[0], from_file=true);
conv_bn_relu(input, conv1, 3, 24, 1, 3, 2, 1, 1);
maxpool2d(src=conv1 | dst=pool1 | size=[3, 3], stride=[2, 2], padding=[0, 0, 0, 0], autopad="NOTSET");
shufflev2_downsample(pool1, stage2_downsample, GROUP, 24, STAGE2_C,
                     28, 28, 3, 2, 1, 1);
shufflev2_block(stage2_downsample, stage2_shuffle1, GROUP, STAGE2_C,
                28, 28, 3, 1, 1, 1);
shufflev2_block(stage2_shuffle1, stage2_shuffle2, GROUP, STAGE2_C,
                28, 28, 3, 1, 1, 1);
shufflev2_block(stage2_shuffle2, stage2_shuffle3, GROUP, STAGE2_C,
                28, 28, 3, 1, 1, 1);
shufflev2_downsample(stage2_shuffle3, stage3_downsample, GROUP, 48, STAGE3_C,
                     14, 14, 3, 2, 1, 1);
shufflev2_block(stage3_downsample, stage3_shuffle1, GROUP, STAGE3_C,
                14, 14, 3, 1, 1, 1);
shufflev2_block(stage3_shuffle1, stage3_shuffle2, GROUP, STAGE3_C,
                14, 14, 3, 1, 1, 1);
shufflev2_block(stage3_shuffle2, stage3_shuffle3, GROUP, STAGE3_C,
                14, 14, 3, 1, 1, 1);
shufflev2_block(stage3_shuffle3, stage3_shuffle4, GROUP, STAGE3_C,
                14, 14, 3, 1, 1, 1);
shufflev2_block(stage3_shuffle4, stage3_shuffle5, GROUP, STAGE3_C,
                14, 14, 3, 1, 1, 1);
shufflev2_block(stage3_shuffle5, stage3_shuffle6, GROUP, STAGE3_C,
                14, 14, 3, 1, 1, 1);
shufflev2_block(stage3_shuffle6, stage3_shuffle7, GROUP, STAGE3_C,
                14, 14, 3, 1, 1, 1);
shufflev2_downsample(stage3_shuffle7, stage4_downsample, GROUP, 96, STAGE4_C,
                     7, 7, 3, 2, 1, 1);
shufflev2_block(stage4_downsample, stage4_shuffle1, GROUP, STAGE4_C,
                7, 7, 3, 1, 1, 1);
shufflev2_block(stage4_shuffle1, stage4_shuffle2, GROUP, STAGE4_C,
                7, 7, 3, 1, 1, 1);
shufflev2_block(stage4_shuffle2, stage4_shuffle3, GROUP, STAGE4_C,
                7, 7, 3, 1, 1, 1);
conv_bn_relu(stage4_shuffle3, conv5, STAGE4_C, CONV5_C, 1, 1, 1, 0, 1);
avgpool2d(src=conv5 | dst=global_pool | size=[7, 7], stride=[1, 1], padding=[0, 0, 0, 0], autopad="NOTSET");
conv(global_pool, conv6, CONV5_C, CLASS, 1, 1, 1, 0, 1);
reshape(src=conv6 | dst=pred | dims=[CLASS]);
